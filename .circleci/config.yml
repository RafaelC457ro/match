version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:10
        environment:
          ENV_PATH: ./.env.testing

      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_DB: project_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm test

      - run:
          name: Setup Code Climate test-reporter
          command: |
            # download test reporter as a static binary
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter format-coverage -t lcov -o codeclimate.frontend.json coverage/front/lcov.info
            ./cc-test-reporter format-coverage -t lcov -o codeclimate.backend.json coverage/back/lcov.info
          when: always
      - run:
          name: Send coverage report to Code Climate
          command:
            # nyc report requires that nyc has already been run,
            # which creates the .nyc_output folder containing necessary data
            |
            ./cc-test-reporter sum-coverage codeclimate.*.json -p 2 -o codeclimate.total.json
            ./cc-test-reporter upload-coverage -i codeclimate.total.json
          when: always
